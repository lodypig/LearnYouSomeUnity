//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UIWrapper_UIEffectAddTypeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(UIWrapper.UIEffectAddType));
		L.RegVar("Keep", get_Keep, null);
		L.RegVar("Replace", get_Replace, null);
		L.RegVar("Overlying", get_Overlying, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Keep(IntPtr L)
	{
		ToLua.Push(L, UIWrapper.UIEffectAddType.Keep);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Replace(IntPtr L)
	{
		ToLua.Push(L, UIWrapper.UIEffectAddType.Replace);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Overlying(IntPtr L)
	{
		ToLua.Push(L, UIWrapper.UIEffectAddType.Overlying);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		UIWrapper.UIEffectAddType o = (UIWrapper.UIEffectAddType)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}


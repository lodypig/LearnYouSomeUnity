//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class LMovieClipWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(LMovieClip), typeof(MonoLoader));
		L.RegFunction("loadTexture", loadTexture);
		L.RegFunction("play", play);
		L.RegFunction("stop", stop);
		L.RegFunction("pause", pause);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("fps", get_fps, set_fps);
		L.RegVar("isPlayOnwake", get_isPlayOnwake, set_isPlayOnwake);
		L.RegVar("path", get_path, set_path);
		L.RegVar("frameLength", get_frameLength, set_frameLength);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int loadTexture(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LMovieClip obj = (LMovieClip)ToLua.CheckObject(L, 1, typeof(LMovieClip));
			obj.loadTexture();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int play(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LMovieClip obj = (LMovieClip)ToLua.CheckObject(L, 1, typeof(LMovieClip));
			obj.play();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int stop(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LMovieClip obj = (LMovieClip)ToLua.CheckObject(L, 1, typeof(LMovieClip));
			obj.stop();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int pause(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LMovieClip obj = (LMovieClip)ToLua.CheckObject(L, 1, typeof(LMovieClip));
			obj.pause();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_fps(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LMovieClip obj = (LMovieClip)o;
			float ret = obj.fps;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index fps on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_isPlayOnwake(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LMovieClip obj = (LMovieClip)o;
			bool ret = obj.isPlayOnwake;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index isPlayOnwake on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_path(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LMovieClip obj = (LMovieClip)o;
			string ret = obj.path;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index path on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_frameLength(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LMovieClip obj = (LMovieClip)o;
			int ret = obj.frameLength;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index frameLength on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_fps(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LMovieClip obj = (LMovieClip)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.fps = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index fps on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_isPlayOnwake(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LMovieClip obj = (LMovieClip)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.isPlayOnwake = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index isPlayOnwake on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_path(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LMovieClip obj = (LMovieClip)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.path = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index path on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_frameLength(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LMovieClip obj = (LMovieClip)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.frameLength = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index frameLength on a nil value" : e.Message);
		}
	}
}

